name: Test Windows Wheels

on: push

jobs:
  build_wheels_windows:
    name: Build wheels for ${{matrix.arch}} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        arch: [win_amd64]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'

      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: defaults,conda-forge
          use-only-tar-bz2: true

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade cibuildwheel

      - name: Build wheels for Windows (${{ matrix.arch }})
        run: cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-${{ matrix.arch }}"
          CIBW_BEFORE_ALL_WINDOWS: "conda create --yes --name=build && conda activate build && conda config --env --set subdir ${{ matrix.arch == 'win32' && 'win-32' || 'win-64' }} && conda install --yes blosc bzip2 hdf5 lz4 lzo snappy zstd zlib"
          CIBW_ENVIRONMENT_WINDOWS: 'CONDA_PREFIX="C:\\Miniconda\\envs\\build" PATH="$PATH;C:\\Miniconda\\envs\\build\\Library\\bin"'
          CIBW_ENVIRONMENT: "PYTABLES_NO_EMBEDDED_LIBS=true DISABLE_AVX2=true"
          CIBW_BEFORE_BUILD: "pip install -r requirements.txt cython>=0.29.21 delvewheel"
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  test_wheels:
    needs: [ build_wheels_windows ]
    name: Test ${{ matrix.python-version }} ${{ matrix.arch }} wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest']
        python-version: ['3.8']
        arch: ['x64']

    steps:
      - uses: actions/download-artifact@v2
        with:
          path: ./wheelhouse/

      - name: Set up Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          # channels: conda-forge
          # channel-priority: strict

      - name: Install tables on ${{ matrix.python-version }}
        run: |
          pip install numpy>=1.19.0 numexpr>=2.6.2
          pip install --no-index --find-links wheelhouse/artifact/ tables

      - name: Test import
        run: |
          python -c "import tables"

      - name: Run tests on ${{ matrix.python-version }}
        run: |
          python -m tables.tests.test_all
